<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Spring的配置文件，这里主要配置和业务逻辑有关的 -->
	<!-- Spring除过控制器不要，剩下的业务逻辑组件都要，包括Dao,Service -->
	<context:component-scan base-package="com.atguigu">
		<!-- 扫描排除不写use-default-filters="false"; -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 0.加载外部配置文件 -->
	<context:property-placeholder location="classpath:dbconfig.properties"/>
	
	<!-- 1.配置数据源 -->
	<bean class="com.mchange.v2.c3p0.ComboPooledDataSource" id="pooledDataSource">
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
	</bean>
	
	<!--2、配置JdbcTemplate操作数据库。pass  -->
	<!--3、配置使用mybatis操作数据库  -->
	<!-- 可以根据配置文件得到sqlSessionFactory -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定配置文件位置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="dataSource" ref="pooledDataSource"></property>
		<!-- 指定xml映射文件的位置 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>
	<!-- 我们要把每一个dao接口的实现加入到ioc容器； -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定dao接口所在的包 -->
		<property name="basePackage" value="com.atguigu.dao"></property>
	</bean>
	<!-- <mybatis-spring:scan base-package="com.atguigu.dao"/> -->
	
	<!-- 配置一个可以执行批量的sqlSession语句 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"></constructor-arg>
		<constructor-arg name="executorType" value="BATCH"></constructor-arg>
	</bean>
	
	
	
	<!--4、配置事务控制;配置事务管理器，让他控制住数据源里面的链接的关闭和提交  -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="pooledDataSource"></property>
	</bean>
	
	<!--5、基于xml配置，配置事务；哪些方法切入事务还要写切入点表达式  -->
	<aop:config>
		<!--配置切入点表达式  -->
		<aop:pointcut expression="execution(* com.atguigu.service..*(..))" id="txPoint"/>
		<!-- 配置事务增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
	</aop:config>
	
	<!--6、配置事务增强、事务属性、事务建议  
	 transaction-manager="tm"：指定要配置的事务管理器的id
	-->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 配置事务属性 -->
		<tx:attributes>
			<tx:method name="*" rollback-for="java.lang.Exception"/>
			<tx:method name="get*" read-only="true"/>
			<!-- <tx:method name="insertEmp" isolation="READ_UNCOMMITTED"/> -->
		</tx:attributes>
	</tx:advice>

</beans>
