<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	
	<context:component-scan base-package="com.atguigu"></context:component-scan>
	
	
	<!-- 加载外部配置文件 -->
	<context:property-placeholder location="classpath:dbconfig.properties"/>
	
	<!-- 1.配置数据源 -->
	<bean class="com.mchange.v2.c3p0.ComboPooledDataSource" id="pooledDataSource">
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
	</bean>
	
	<!-- 2.JdbcTemplate操作数据库 -->
	<!-- Spring提供了一个类JdbcTemplate，我们用他操作数据库，导入Spring的数据库模块 
			spring-jdbc-4.0.0.RELEASE.jar
			spring-orm-4.0.0.RELEASE.jar
			spring-tx-4.0.0.RELEASE.jar
	-->
	<bean class="org.springframework.jdbc.core.JdbcTemplate" id="jdbcTemplate">
		<constructor-arg name="dataSource" ref="pooledDataSource"></constructor-arg>
	</bean>
	
	<!-- 配置一个具有 具名参数 功能的jdbcTemplate: NamedParameterJdbcTemplate-->
	<bean class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate" id="namedParameterJdbcTemplate">
		<!-- 使用构造器方式注入一个数据源 -->
		<constructor-arg name="dataSource" ref="pooledDataSource"></constructor-arg>
	</bean>
	
	<!-- 3.配置事务管理器 -->
	<!-- 1.配置事务管理器（切面）让其进行事务控制；一定导入面向切面编程的几个包
			com.springsource.net.sf.cglib-2.2.0.jar
			com.springsource.org.aopalliance-1.0.0.jar
			com.springsource.org.aspectj.weaver-1.6.8.RELEASE.jar
			spring-aspects-4.0.0.RELEASE.jar
	 -->
	<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
		<!-- 控制住数据源 -->
		<property name="dataSource" ref="pooledDataSource"></property>
	</bean>
	<!-- 基于xml配置的事务;依赖tx和aop名称空间 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.atguigu.service.*.*(..))" id="txPoint"/>
		<!-- 事务建议/事务增强 advice-ref:指向事务管理器的配置-->
		<aop:advisor advice-ref="myAdvice" pointcut-ref="txPoint"/>
	</aop:config>
	<!-- 配置事务管理器 
		transaction-manager="transactionManager":指定是配置哪个事务管理器的
	-->
	<tx:advice id="myAdvice" transaction-manager="transactionManager">
		<!-- 配置事务属性 -->
		<tx:attributes>
			<!-- 指明哪些方法是事务方法；切入点表达式只是说，事务管理器要切入这些方法，哪些方法加事务，是用tx:method指定 -->
			<tx:method name="*"/>
			<tx:method name="get*" read-only="true"/>
		</tx:attributes>
	</tx:advice>

</beans>
